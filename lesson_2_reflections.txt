What happens when you initialize a repository? Why do you need to do it?
    git creates a directory named ".git". Here commits and changes will be stored.

How is the staging area different from the working directory and the repository? What value do you think it offers?
    It doesn't neccessarily contain all files from the working directory. Different from the repository, it contains no informations about commits already been done. The value is, it makes it easy to collect the files for a commit even if it would be difficult to name all files to be added in a commit command

How can you use the staging area to make sure you have one commit per logical change?
    collect all changes relevant for that change in the staging area; check if that's all you need with git diff

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    Developing a new version while still maintaining the old version of a project - branching makes it easy to work on both versions alternately
    Being able to play with the source code on a large scale without loosing the ability to work on the master branch 

How do the diagrams help you visualize the branch structure?
    They show each branch as a separate line, visualizing the parent relationship within and between each branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
    The result is we have a branch that combines all changes that were made in one of the branches. They can be treated as one branch now, so we can represent them as flowing back together.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
    Pro: easier, less error-prone than manual merging, faster
    Con: None
